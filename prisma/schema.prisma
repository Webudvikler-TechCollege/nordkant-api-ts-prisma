// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement()) // -> Primary Key med auto optælling
  firstname    String  @default("Ikke navngivet")
  lastname     String  @default("Ikke navngivet")
  email        String  @unique // -> Unik værdi
  password     String
  description  String? @db.Text // -> Lang tekst
  image        String
  refreshToken String
  isActive     Boolean @default(true) // -> Bool med default true

  favorites Favorite[] // -> Mange til een relation 
  reviews   Review[]

  @@map("users") // -> Navn på tabel
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String
  image       String
  description String?  @db.Text // -> Lang tekst
  price       Decimal  @db.Decimal(10, 2) // -> Decimaltal til pris
  stock       Int
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now()) // -> Datotid

  favorites Favorite[]
  reviews   Review[]

  @@map("products")
}

model Review {
  id        Int      @id @default(autoincrement())
  title     String   @db.Text // -> Lang tekst
  comment   String   @db.Text // -> Lang tekst
  numStars  Int
  productId Int
  userId    Int
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now()) // -> Datotid
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("reviews")
}

model Favorite {
  id        Int @id @default(autoincrement())
  userId    Int
  productId Int

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade) // -> Een til mange relation
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("favorites")
}
